#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void CSCAN(vector<int>& requests, int head, int disk_size) {
    int seek_count = 0;
    int distance, cur_track;
    vector<int> left, right, seek_sequence;

    right.push_back(disk_size - 1);
    left.push_back(0);

    for (int i = 0; i < requests.size(); i++) {
        if (requests[i] < head) {
            left.push_back(requests[i]);
        }
        if (requests[i] > head) {
            right.push_back(requests[i]);
        }
    }

    sort(left.begin(), left.end());
    sort(right.begin(), right.end());

    for (int i = 0; i < right.size(); i++) {
        cur_track = right[i];
        seek_sequence.push_back(cur_track);
        distance = abs(cur_track - head);
        seek_count += distance;
        head = cur_track;
    }

    head = 0;
    seek_count += (disk_size - 1);

    for (int i = 0; i < left.size(); i++) {
        cur_track = left[i];
        seek_sequence.push_back(cur_track);
        distance = abs(cur_track - head);
        seek_count += distance;
        head = cur_track;
    }

    cout << "Total seek operations (C-SCAN): " << seek_count << endl;
    cout << "Seek Sequence (C-SCAN): ";
    for (int i = 0; i < seek_sequence.size(); i++) {
        cout << seek_sequence[i] << " ";
    }
    cout << endl;
}

int main() {
    vector<int> requests = {98, 183, 37, 122, 14, 124, 65, 67};
    int head = 53;
    int disk_size = 200;

    CSCAN(requests, head, disk_size);

    return 0;
}
